#NOP {command} {parameters};
#ALIAS {.file}
{
  #NOP %1;
  #SWITCH {"%1"}
  {
    #CASE {"load"}
    {
      #VAR {result} {@fFileLoad{%2}};
    };
    #CASE {"loadall"}
    {
      #VAR {result} {@fFileLoadAll{%2}};
    };
    #CASE {"read"}
    {
      #ECHO {@fFileRead{%2}};
    };
    #CASE {"list"}
    {
      #VAR {_file[List]} {@fFileList{%1};};
      #FOREACH {$_file[List][%*]} {_file[Name]} {#ECHO {$_file[Name]};};
      #UNVAR {_file};
    };
    #DEFAULT 
    {
      #ECHO {Unrecognised Command};
    };
  };
};

#FUNCTION {fFileLoad}
{
  #CLASS {%1} {kill};
  #CLASS {%1} {read} {%1};
  #RETURN;
};

#FUNCTION {fFileLoadAll}
{
  #VAR {_fFLA[spec]} {@fParseFilePath{%1}};
  #VAR {_fFLA[list]} {@fFileList{{$_fFLA[spec][path]}{$_fFLA[spec][name].$_fFLA[spec][ext]}}};
  #IF {"$_fFLA[list]" != ""}
  {
    #FORALL {$_fFLA[list][%*]} 
    {
      #VAR {result} {@fFileLoad{&0}};
    };
  };
  #UNVAR {_fFLA};
  #RETURN;
};

#FUNCTION {fFileList}
{
  #IF {"%2" != ""}
  {
    #SCRIPT {result} {find '%1' -name '%2' -type f -maxdepth 1 2>/dev/null};
  };
  #ELSE
  {
    #SCRIPT {result} {find '%1' -type f -maxdepth 1 2>/dev/null};
  };
};

#FUNCTION {fFileRead}
{
  #LINE SUBSTITUTE VARIABLE {#SCRIPT {result} {while read -r line; do echo "$line"; done < %1};};
};

#FUNCTION {fFileExists}
{
  #SCRIPT {result} {test -e "%1" && echo "1" || echo "0"};
  #RETURN $result[1];
};

#FUNCTION {fFileCreateDir}
{
  #SCRIPT {mkdir -p "%1"};
};

#FUNCTION {fFileGetPath}
{
  #UNVAR result;
  #REGEXP {%1} {{^\/*((.+)\/)*}}
  {
    #IF {"&1" != ""}
    {    
      #RETURN {&3};
    }
    {
      #RETURN {};
    };
  };
};

#FUNCTION {fFileGetName}
{
  #REGEXP {%1} {{^(.*\/|)([^\.]+)(\.(.+)|)$}}
  {
    #IF {"&1" != ""}
    {    
      #RETURN {&3};
    }
    {
      #RETURN {};
    };
  };
};

#FUNCTION {fFileGetExt}
{
  #REGEXP {%1} {{^.*\.(.+)$}}
  {
    #IF {"&1" != ""}
    {    
      #RETURN {&2};
    }
    {
      #RETURN {};
    };
  };
};

#FUNCTION {fParseFilePath}
{
  #REGEXP {%1} {{^(.*\/|)([^\.]+)\.((.+)|)$}}
  {
    #VAR {result[path]} {&2};
    #VAR {result[name]} {&3};
    #VAR {result[ext]} {&4};
  };
};
